{
  "name": "flatiron-cli-users",
  "version": "0.1.1",
  "description": "Encapsulated commands for managing users in flatiron CLI apps",
  "author": {
    "name": "Nodejitsu Inc",
    "email": "info@nodejitsu.com"
  },
  "contributors": [
    {
      "name": "Charlie Robbins",
      "email": "charlie@nodejitsu.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/flatiron/flatiron-cli-users.git"
  },
  "peerDependencies": {
    "flatiron": "~0.1.9"
  },
  "devDependencies": {
    "flatiron": "~0.1.9",
    "nodejitsu-api": "0.2.x",
    "nock": "0.9.x",
    "vows": "0.6.x"
  },
  "main": "./lib/flatiron-cli-users",
  "scripts": {
    "test": "vows --spec"
  },
  "engines": {
    "node": ">= 0.6.0"
  },
  "readme": "# flatiron-cli-users\n\nEncapsulated commands for managing users in [flatiron][0] CLI apps\n\n## Example\nAt its core [flatiron-cli-users][1] is a broadway-compatible plugin which can be used by any [flatiron][0] application:\n\n``` js\n  var flatiron = require('flatiron'),\n      app = flatiron.app;\n\n  //\n  // Configure the Application to be a CLI app with\n  // a JSON configuration file `test-config.json`\n  //\n  app.name = 'app.js';\n  app.config.file({ file: 'test-config.json' });\n  app.use(flatiron.plugins.cli, {\n    usage: 'A simple CLI app using flatiron-cli-users'\n  });\n\n  //\n  // Expose CLI commands using `flatiron-cli-users`\n  //\n  app.use(require('flatiron-cli-users'));\n  \n  if (!module.parent) {\n    //\n    // Start the application\n    //\n    app.start();\n  }\n```\n\nIf you run the above script:\n\n``` bash\n  $ node app.js users create\n```\n\nThe output will be:\n\n``` bash\n  help:   To signup, first you will need to provide a username\n  prompt: username: foobar\n  help:   Next, we will require your email address\n  prompt: email: email@test.com\n  help:   Finally, we will need a password for this account\n  prompt: password: \n  prompt: confirm password: \n  info:   You account is now being created\n  info:   Account creation successful!\n```\n\nAnd the contents of `test-config.json` will have the specified user information. \n\n## API Documentation\n\n### Expected API endpoints\n\nThis `flatiron` plugin expects an API endpoint to be present on the application through `app.users`. You may implement this API endpoint however you wish. We would suggest using [resourceful][2] and [director][3], but you are free to use [express][4] or other node.js frameworks.\n\n**app.users.auth(function (err, result))**\n\nResponds with a valid indicating if the current user is authenticated.\n\n**app.users.availabile(username, function (err, result))**\n\nResponds with a valid indicating if the desired username is available.\n\n**app.users.create(user, function (err, result))**\n\nCreates a user with the specified properties.\n\n**app.users.update(username, props, function (err, result))**\n\nUpdates the user with `username` with specified `props`.\n\n**app.users.forgot(username, props, function (err, result))**\n\nAttempts to reset the password for the `username` with the specified `props`\n\n### Commands exposed\n\n``` bash\n  $ node examples/app.js help users\n  help:   `app.js users *` commands allow you to work with new\n  help:   or existing user accounts.\n  help:   \n  help:   app.js users available <username>\n  help:   app.js users changepassword\n  help:   app.js users confirm <username> <inviteCode>\n  help:   app.js users create\n  help:   app.js users forgot <username> <shake>\n  help:   app.js users login\n  help:   app.js users logout\n  help:   app.js users whoami\n  help:   \n  help:   You will be prompted for additional user information\n  help:   as required.\n```\n\n### Options\n\n``` js\n  {\n    //\n    // Set of functions which will execute after named commands: create, login, logout, etc.\n    //\n    after: { login: function () { ... } },\n\n    //\n    // Set of functions which will execute before named commands: create, login, logout, etc.\n    //\n    before: { login: function () { ... } }\n  }\n```\n\n## Installation\n\n### Installing npm (node package manager)\n\n``` bash\n  $ curl http://npmjs.org/install.sh | sh\n```\n\n### Installing flatiron-cli-users\n\n``` bash\n  $ [sudo] npm install flatiron-cli-users\n```\n\n## Run Tests\nTests are written in vows and give complete coverage of all APIs and storage engines.\n\n``` bash\n  $ npm test\n```\n\n#### Author: [Charlie Robbins](http://nodejitsu.com)\n#### License: MIT\n\n[0]: http://flatironjs.org\n[1]: http://github.com/flatiron/flatiron-cli-users\n[2]: http://github.com/flatiron/resourceful\n[3]: http://github.com/flatiron/director\n[4]: http://expressjs.org",
  "_id": "flatiron-cli-users@0.1.1",
  "_from": "flatiron-cli-users@0.1.1"
}
