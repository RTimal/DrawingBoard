0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'install',
1 verbose cli   'jitsu',
1 verbose cli   '-g' ]
2 info using npm@1.1.49
3 info using node@v0.8.7
4 verbose node symlink C:\Program Files\nodejs\\node.exe
5 verbose read json C:\Program Files\nodejs\package.json
6 verbose read json C:\Program Files\nodejs\package.json
7 verbose cache add [ 'jitsu', null ]
8 silly cache add name=undefined spec="jitsu" args=["jitsu",null]
9 verbose parsed url { pathname: 'jitsu', path: 'jitsu', href: 'jitsu' }
10 silly lockFile 9d81e68b-jitsu jitsu
11 verbose lock jitsu C:\Users\Rajiev\AppData\Roaming\npm-cache\9d81e68b-jitsu.lock
12 silly lockFile 9d81e68b-jitsu jitsu
13 verbose addNamed [ 'jitsu', '' ]
14 verbose addNamed [ null, '' ]
15 silly lockFile e680b62f-jitsu jitsu@
16 verbose lock jitsu@ C:\Users\Rajiev\AppData\Roaming\npm-cache\e680b62f-jitsu.lock
17 silly addNameRange { name: 'jitsu', range: '', hasData: false }
18 verbose url raw jitsu
19 verbose url resolving [ 'https://registry.npmjs.org/', './jitsu' ]
20 verbose url resolved https://registry.npmjs.org/jitsu
21 info retry registry request attempt 1 at 00:21:07
22 verbose etag "BKRXX93NGNT4AOVRNS5CBS7TV"
23 http GET https://registry.npmjs.org/jitsu
24 http 304 https://registry.npmjs.org/jitsu
25 silly registry.get cb [ 304,
25 silly registry.get   { server: 'CouchDB/1.2.0 (Erlang OTP/R15B)',
25 silly registry.get     etag: '"BKRXX93NGNT4AOVRNS5CBS7TV"',
25 silly registry.get     date: 'Wed, 07 Nov 2012 05:20:52 GMT',
25 silly registry.get     'content-length': '0' } ]
26 verbose etag jitsu from cache
27 silly addNameRange number 2 { name: 'jitsu', range: '', hasData: true }
28 silly addNameRange versions [ 'jitsu',
28 silly addNameRange   [ '0.4.14',
28 silly addNameRange     '0.4.15',
28 silly addNameRange     '0.4.16',
28 silly addNameRange     '0.5.0',
28 silly addNameRange     '0.5.0-1',
28 silly addNameRange     '0.6.0',
28 silly addNameRange     '0.6.1',
28 silly addNameRange     '0.6.1-1',
28 silly addNameRange     '0.6.2',
28 silly addNameRange     '0.6.3',
28 silly addNameRange     '0.7.0',
28 silly addNameRange     '0.7.0-1',
28 silly addNameRange     '0.7.0-2',
28 silly addNameRange     '0.7.1',
28 silly addNameRange     '0.7.2',
28 silly addNameRange     '0.7.2-1',
28 silly addNameRange     '0.7.3',
28 silly addNameRange     '0.7.4',
28 silly addNameRange     '0.7.4-1',
28 silly addNameRange     '0.7.5',
28 silly addNameRange     '0.7.6',
28 silly addNameRange     '0.7.6-1',
28 silly addNameRange     '0.7.7',
28 silly addNameRange     '0.7.7-1',
28 silly addNameRange     '0.7.7-2',
28 silly addNameRange     '0.7.100',
28 silly addNameRange     '0.8.0',
28 silly addNameRange     '0.8.1',
28 silly addNameRange     '0.8.2',
28 silly addNameRange     '0.8.2-1',
28 silly addNameRange     '0.8.3',
28 silly addNameRange     '0.8.4',
28 silly addNameRange     '0.8.4-1',
28 silly addNameRange     '0.8.5',
28 silly addNameRange     '0.8.5-1',
28 silly addNameRange     '0.8.6',
28 silly addNameRange     '0.8.7',
28 silly addNameRange     '0.8.8',
28 silly addNameRange     '0.8.9',
28 silly addNameRange     '0.9.0',
28 silly addNameRange     '0.9.1',
28 silly addNameRange     '0.9.2',
28 silly addNameRange     '0.9.3',
28 silly addNameRange     '0.9.4',
28 silly addNameRange     '0.9.5',
28 silly addNameRange     '0.9.6',
28 silly addNameRange     '0.9.7',
28 silly addNameRange     '0.9.8',
28 silly addNameRange     '0.10.0',
28 silly addNameRange     '0.10.1',
28 silly addNameRange     '0.10.2',
28 silly addNameRange     '0.10.3',
28 silly addNameRange     '0.10.3-1',
28 silly addNameRange     '0.10.3-2',
28 silly addNameRange     '0.10.4',
28 silly addNameRange     '0.10.5' ] ]
29 verbose addNamed [ 'jitsu', '0.10.5' ]
30 verbose addNamed [ '0.10.5', '0.10.5' ]
31 silly lockFile 20d13dac-jitsu-0-10-5 jitsu@0.10.5
32 verbose lock jitsu@0.10.5 C:\Users\Rajiev\AppData\Roaming\npm-cache\20d13dac-jitsu-0-10-5.lock
33 verbose read json C:\Users\Rajiev\AppData\Roaming\npm-cache\jitsu\0.10.5\package\package.json
34 silly lockFile 20d13dac-jitsu-0-10-5 jitsu@0.10.5
35 silly lockFile e680b62f-jitsu jitsu@
36 silly resolved [ { name: 'jitsu',
36 silly resolved     description: 'Flawless command line deployment of Node.js apps to the cloud',
36 silly resolved     keywords:
36 silly resolved      [ 'cli',
36 silly resolved        'nodejitsu',
36 silly resolved        'cloud hosting',
36 silly resolved        'platform-as-a-service',
36 silly resolved        'deployment' ],
36 silly resolved     version: '0.10.5',
36 silly resolved     author: { name: 'Nodejitsu Inc.', email: 'info@nodejitsu.com' },
36 silly resolved     maintainers: [ [Object], [Object] ],
36 silly resolved     repository: { type: 'git', url: 'http://github.com/nodejitsu/jitsu.git' },
36 silly resolved     preferGlobal: true,
36 silly resolved     dependencies:
36 silly resolved      { colors: '0.6.0-1',
36 silly resolved        complete: '0.3.1',
36 silly resolved        dateformat: '1.0.2-1.2.3',
36 silly resolved        flatiron: '0.3.0',
36 silly resolved        'flatiron-cli-config': '0.1.3',
36 silly resolved        'flatiron-cli-users': '0.1.1',
36 silly resolved        fstream: '0.1.18',
36 silly resolved        'fstream-npm': '0.1.1',
36 silly resolved        npm: '1.1.59',
36 silly resolved        'nodejitsu-api': '0.3.6',
36 silly resolved        pkginfo: '0.2.3',
36 silly resolved        request: '2.9.203',
36 silly resolved        'require-analyzer': '0.4.0-3',
36 silly resolved        'spawn-command': '0.0.2',
36 silly resolved        semver: '1.0.14',
36 silly resolved        tar: '0.1.13',
36 silly resolved        wizard: '0.0.1',
36 silly resolved        ladder: '0.0.0',
36 silly resolved        progress: '0.1.0' },
36 silly resolved     devDependencies: { nock: '0.8.x', vows: '0.6.x' },
36 silly resolved     bin: { jitsu: './bin/jitsu' },
36 silly resolved     main: './lib/jitsu',
36 silly resolved     scripts: { test: 'vows test/commands/*-test.js --spec' },
36 silly resolved     engines: { node: '>= 0.4.0' },
36 silly resolved     readme: '# jitsu [![Build Status](https://secure.travis-ci.org/nodejitsu/jitsu.png?branch=master)](http://travis-ci.org/nodejitsu/jitsu)\n*Flawless command line deployment of Node.js apps to the cloud*\n\n<img src="https://github.com/nodejitsu/jitsu/raw/master/assets/jitsu.png"/>\n\n## Overview\n\n[Jitsu](https://github.com/nodejitsu/jitsu) is a [Command Line Tool (CLI)](http://en.wikipedia.org/wiki/Command-line_interface) for managing and deploying Node.js applications. It\'s open-source and easy to use. [We\'ve](https://github.com/nodejitsu) designed `jitsu` to be suitable for command line beginners, but still be powerful and extensible enough for production usage.\n\n`jitsu` requires `npm`, the [node package manager](http://npmjs.org).\n\n## One-line jitsu install\n\n    [sudo] npm install jitsu -g\n\n## Features\n\n`jitsu` is built on some amazing technologies which we\'ve been actively building with the community since 2009. `jitsu` is fully extendable and extremely modular ( see [Libraries](#Libraries) section ).\n\n - Allows for seamless deployment of your Node.js applications to the cloud\n - Ships with use-full boilerplates and sample applications through [Node Apps](https://github.com/nodeapps) project integration\n - Fully supports `npm` dependency resolution on deployment to [Nodejitsu](http://nodejitsu.com)\n - Full support of [Nodejitu\'s API](https://github.com/nodejitsu/nodejitsu-api) ( a plethora of node.js goodies )\n - Integrated multi-level multi-transport logging support via [Winston](https://github.com/flatiron/winston)\n - Too many to list... seek [further knowledge ](https://github.com/nodejitsu/handbook) or just try it out!\n\n\n# One-Line Node App Installation\n\n**If you don\'t have an application yet, you can use one of ours!**\n\n     jitsu install\n\n# One-Line Node App Deployment\n\n     jitsu deploy\n\n*( inside the path of your Node.js application )*\n\n\nThis will create a new application, package.json, and deploy your path to [Nodejitsu](http://nodejitsu.com). If it\'s your first deployment, you\'ll be prompted for some information such as *subdomain* and *start script* but it\'s really easy and we promise it will only take a few seconds.\n\nIf you have any issues deploying your node.js application please feel free to open up an issue on the [Github Issues](https://github.com/nodejitsu/jitsu/issues) section of this page, we\'ll have someone get back to you in a flash!\n\n## Usage\n\n`jitsu` is mostly self documenting. After installation, run the `jitsu` command from your command line.\n\nIf it\'s your first time using `jitsu`, you will be prompted to login with an existing account or create a new account.\n\n<img src="https://github.com/nodejitsu/jitsu/raw/master/assets/login.png"/>\n\n## After you\'ve logged in, you can start deploying apps immediately!\n\n\n\n## Command Line Usage\n\n`jitsu` is mostly self-documenting. Try any of these commands to get started.\n\n\n   **Usage:**\n   \n     jitsu <resource> <action> <param1> <param2> ...\n   \n   **Common Commands:**\n\n   *To sign up for [Nodejitsu](http://nodejitsu.com)*\n\n     jitsu signup\n\n   *To log into [Nodejitsu](http://nodejitsu.com)*\n\n     jitsu login\n\n   *To install a pre-built application*\n\n     jitsu install\n\n   *Deploys application in the current path to [Nodejitsu](http://nodejitsu.com)*\n   \n     jitsu deploy\n   \n   *Lists all applications for the current user*\n   \n     jitsu list\n   \n   *Additional Commands*\n   \n     jitsu apps\n     jitsu snapshots\n     jitsu users\n     jitsu logs\n     jitsu databases\n     jitsu conf\n     jitsu logout\n\n\n\n### Help\n\n`jitsu` is mostly self documenting. We suggest just trying it out. All commands will yield friendly messages if you specify incorrect parameters. If you find anything difficult to use, please open up a [Github issue](https://github.com/nodejitsu/jitsu/issues) or pull request! \n\n     jitsu help\n     jitsu help apps\n     jitsu help snapshots\n     jitsu help users\n     jitsu help logs\n     jitsu help databases\n     jitsu help config\n\n## .jitsuconf file\n\nAll configuration data for your local `jitsu` install is located in the *.jitsuconf* file in your home directory. Directly modifying this file is not really advised. You should be able to make all configuration changes via:\n\n    jitsu config\n\nIf you need to have multiple configuration files, use --localconf or --jitsuconf options.\n\nSome Examples:\n\n    jitsu config set colors false   # disable colors\n    jitsu config set timeout 480000 # set request timeouts to 8 minutes\n    jitsu config set analyze false  # disable package analyzer\n    jitsu config set protocol https # Always use HTTP Secure\n\n##jitsu options\n\n    jitsu [commands] [options]\n \n    --version             print jitsu version and exit\n    --localconf           search for .jitsuconf file in ./ and then parent directories\n    --jitsuconf [file]    specify file to load configuration from\n    --noanalyze           skip require-analyzer: do not attempt to dynamicially detect dependencies\n\n##jitsu behind proxy\n\nIf you are behind a proxy and you haven\'t configured jitsu to use it, `jitsu` will throw an error, `Jitsu requires you to connect to Nodejitsu\'s stack (api.nodejitsu.com)`.\nIn order to solve this issue, you can configure jitsu to use a proxy by executing the following command.\n\n    jitsu config set proxy http://proxy.domain.com:3128/\n\nIf you need to authenticate yourselves to the proxy, you can try this command.\n\n    jitsu config set proxy http://user:pass@proxy.domain.com:3128/\n\n<a name="Libraries"></a>\n\n##jitsu hooks\n\nYou can add pre-deploy and post-deploy hooks to jitsu for running build scripts, tagging releases or anything else you want to do. These are hooks that are executed before or after deploying your application on the local machine. They are stored in your package.json:\n\n    {\n      "name": "test-app",\n      "subdomain": "test-app",\n      "scripts": {\n        "predeploy": "echo This will be run before deploying the app",\n        "postdeploy": "echo This will be run after deploying the app",\n        "start": "app.js"\n      },\n      "engines": {\n        "node": "0.6.x"\n      },\n      "version": "0.0.0"\n    }\n\nWhich results in the following output when deploying:\n\n    $ jitsu deploy\n    info:    Welcome to Nodejitsu nodejitsu\n    info:    It worked if it ends with Nodejitsu ok\n    info:    Executing command deploy\n    info:    Analyzing your application dependencies in app.js\n    info:    Checking app availability test-app\n    info:    Creating app test-app\n    This will be run before deploying the app\n    info:    Creating snapshot 0.0.0\n    info:    Updating app test-app\n    info:    Activating snapshot 0.0.0 for test-app\n    info:    Starting app test-app\n    info:    App test-app is now started\n    info:    http://test-app.jit.su on Port 80\n    This will be run after deploying the app\n    info:    Nodejitsu ok\n\n## Libraries\n`jitsu` is built on a few well developed, well maintained Node.js libraries. The [Nodejitsu](http://nodejitsu.com) team and friends have been building and using these projects actively for the past two years. They are the most used Node libraries (see: [http://search.npmjs.org/](http://search.npmjs.org/)) and are actively maintained by Nodejitsu and other core members of the Node.js community. Each library serves a specific function and we highly suggest you check each one out individually if you wish to increase your knowledge of Node.js\n\n- [npm](http://npmjs.org) - Node Package Manager\n- [colors](https://github.com/marak/colors.js) - Terminal Colors module\n- [optimist](https://github.com/substack/node-optimist) - CLI Options Parsing\n- [request](https://github.com/mikeal/request) - http request module\n- [async](https://github.com/caolan/async) - Asynchronous Iteration\n- [vows](http://vowsjs.org) - Asynchronous BDD testing library\n- [winston](https://github.com/flatiron/winston) - Multi-transport logging library\n\n### Need more?\nThe documentation for `jitsu` and the [Nodejitsu](http://nodejitsu.com) APIs is open-source and a work in-progress. For more information checkout the [Nodejitsu Handbook](https://github.com/nodejitsu/handbook)\n\n#### (C) Copyright 2010, [Nodejitsu](http://nodejitsu.com) Inc.\n',
36 silly resolved     _id: 'jitsu@0.10.5',
36 silly resolved     _from: 'jitsu' } ]
37 info install jitsu@0.10.5 into C:\Program Files\nodejs
38 info installOne jitsu@0.10.5
39 verbose from cache C:\Users\Rajiev\AppData\Roaming\npm-cache\jitsu\0.10.5\package\package.json
40 info C:\Program Files\nodejs\node_modules\jitsu unbuild
41 verbose read json C:\Program Files\nodejs\node_modules\jitsu\package.json
42 info preuninstall jitsu@0.9.6
43 info uninstall jitsu@0.9.6
44 verbose true,C:\Program Files\nodejs\node_modules,C:\Program Files\nodejs\node_modules unbuild jitsu@0.9.6
45 verbose C:\Program Files\nodejs,[object Object] binRoot
46 info C:\Program Files\nodejs\node_modules\jitsu unbuild
47 verbose read json C:\Program Files\nodejs\node_modules\jitsu\package.json
48 info preuninstall jitsu@0.9.6
49 info uninstall jitsu@0.9.6
50 verbose true,C:\Program Files\nodejs\node_modules,C:\Program Files\nodejs\node_modules unbuild jitsu@0.9.6
51 verbose C:\Program Files\nodejs,[object Object] binRoot
52 error error rolling back Error: EPERM, unlink 'C:\Program Files\nodejs\jitsu.cmd'
52 error error rolling back  jitsu@0.10.5 { [Error: EPERM, unlink 'C:\Program Files\nodejs\jitsu.cmd']
52 error error rolling back   errno: 50,
52 error error rolling back   code: 'EPERM',
52 error error rolling back   path: 'C:\\Program Files\\nodejs\\jitsu.cmd' }
53 error Error: EPERM, unlink 'C:\Program Files\nodejs\jitsu.cmd'
53 error  { [Error: EPERM, unlink 'C:\Program Files\nodejs\jitsu.cmd']
53 error   errno: 50,
53 error   code: 'EPERM',
53 error   path: 'C:\\Program Files\\nodejs\\jitsu.cmd' }
54 error Please try running this command again as root/Administrator.
55 error System Windows_NT 6.1.7601
56 error command "C:\\Program Files\\nodejs\\\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "install" "jitsu" "-g"
57 error cwd c:\wamp\www\draw
58 error node -v v0.8.7
59 error npm -v 1.1.49
60 error path C:\Program Files\nodejs\jitsu.cmd
61 error code EPERM
62 error errno 50
63 error stack Error: EPERM, unlink 'C:\Program Files\nodejs\jitsu.cmd'
64 verbose exit [ 50, true ]
